
name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  prepare-matrix:
    # name: Prepare CI matrix
    runs-on: ubuntu-18.04    
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      run: echo "::set-output name=matrix::$(yarn node ./scripts/get-ci-packages.js)"

  checks:
    needs: prepare-matrix
    runs-on: ubuntu-18.04

    strategy:
      matrix: ${{fromJson(needs.prepareMatrix.outputs.matrix)}}

    name: ${{ matrix.package }} - Checks

    steps:
    - uses: actions/checkout@v2

    - name: Use node 12
      uses: actions/setup-node@v1
      with:
        node-version: 12

    # - name: Get yarn cache directory path
    #   id: yarn-cache-dir-path
    #   run: echo "::set-output name=dir::$(yarn cache dir)"

    # - uses: actions/cache@v2
    #   id: yarn-cache
    #   with:
    #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
    #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    #     restore-keys: |
    #       ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn --immutable

    - name: Check type + lint + dependencies
      run: cd ${{ matrix.package }} && yarn p:check-all
      env:
        CI: true
      
  # test:
  #   name: Test
  #   runs-on: ubuntu-18.04

  #   strategy:
  #     matrix:
  #       node-version: [12.x]

  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Use node ${{ matrix.node-version }}
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: ${{ matrix.node-version }}

  #   - name: Get yarn cache directory path
  #     id: yarn-cache-dir-path
  #     run: echo "::set-output name=dir::$(yarn cache dir)"

  #   - uses: actions/cache@v2
  #     id: yarn-cache
  #     with:
  #       path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #       key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #       restore-keys: |
  #         ${{ runner.os }}-yarn-

  #   - name: Install dependencies
  #     run: yarn --frozen-lockfile

  #   - name: Build devtools
  #     run: yarn workspace @timeflies/devtools build

  #   - name: Build common
  #     run: yarn workspace @timeflies/common build

  #   - name: Build shared
  #     run: yarn workspace @timeflies/shared build

  #   - name: Test all
  #     run: yarn workspaces run test-ci --ci
  #     env:
  #       CI: true

  # build:
  #   name: Build
  #   runs-on: ubuntu-18.04

  #   strategy:
  #     matrix:
  #       node-version: [12.x]

  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Use node ${{ matrix.node-version }}
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: ${{ matrix.node-version }}

  #   - name: Get yarn cache directory path
  #     id: yarn-cache-dir-path
  #     run: echo "::set-output name=dir::$(yarn cache dir)"

  #   - uses: actions/cache@v2
  #     id: yarn-cache
  #     with:
  #       path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #       key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #       restore-keys: |
  #         ${{ runner.os }}-yarn-

  #   - name: Install dependencies
  #     run: yarn --frozen-lockfile

  #   - name: Build shared
  #     run: yarn workspace @timeflies/shared build

  #   - name: Build backend
  #     run: yarn workspace @timeflies/back build

  #   - name: Build frontend
  #     run: yarn workspace @timeflies/front build
